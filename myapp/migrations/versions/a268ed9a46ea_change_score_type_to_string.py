"""Change Score type to String

Revision ID: a268ed9a46ea
Revises: e73d719fbba7
Create Date: 2025-02-24 09:09:40.267020

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a268ed9a46ea"
down_revision: Union[str, None] = "e73d719fbba7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "players",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_players_name"), "players", ["name"], unique=True)
    op.create_table(
        "matches",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("player1_id", sa.Integer(), nullable=False),
        sa.Column("player2_id", sa.Integer(), nullable=False),
        sa.Column("winner_id", sa.Integer(), nullable=True),
        sa.Column("score", sa.String(length=1000), nullable=False),
        sa.Column("current_game_state", sa.String(length=26), nullable=True),
        sa.ForeignKeyConstraint(
            ["player1_id"],
            ["players.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player2_id"],
            ["players.id"],
        ),
        sa.ForeignKeyConstraint(
            ["winner_id"],
            ["players.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uuid"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("matches")
    op.drop_index(op.f("ix_players_name"), table_name="players")
    op.drop_table("players")
    # ### end Alembic commands ###
